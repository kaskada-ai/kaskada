###############################################################################
# Create the rust-builder

FROM rust:slim-bullseye AS rust-sysdeps
# needs perl to install and configure openssl
RUN apt-get update && \
    apt-get install \
    bc \
    clang \
    libssl-dev \
    lld \
    perl \
    pkg-config \
    make \
    cmake \
    protobuf-compiler \
    libprotobuf-dev \
    --no-install-recommends \
    -y && \
    rm -rf /var/lib/lapt/lists/*

# Setup default (stable) toolchain first in a separate layer (since it is
# less likely to change / more likely to be cached)
RUN rustup update && \
    rustup component add clippy llvm-tools-preview rustfmt

COPY ./*.toml  /builds/kaskada/
COPY ./*.lock  /builds/kaskada/
COPY ./NOTICE  /builds/kaskada/
COPY ./crates/ /builds/kaskada/crates/
COPY ./proto/  /builds/kaskada/proto/
WORKDIR /builds/kaskada

# outputs to ./target/debug/sparrow-main
RUN cargo build --bin sparrow-main

###############################################################################
# Build the wren code

FROM golang:1.19 AS wren-build

RUN mkdir -p /builds/kaskada/wren
RUN mkdir -p /builds/kaskada/gen/proto/go
WORKDIR /builds/kaskada/wren

# Fetch dependencies.
COPY ./wren/go.mod /builds/kaskada/wren/
COPY ./wren/go.sum /builds/kaskada/wren/
COPY ./gen/proto/go/go.mod /builds/kaskada/gen/proto/go/
COPY ./gen/proto/go/go.sum /builds/kaskada/gen/proto/go/
RUN go mod download

#compile minimal executable
COPY NOTICE /builds/kaskada/wren/
COPY ./wren /builds/kaskada/wren
COPY ./gen/proto/go /builds/kaskada/gen/proto/go
RUN go build -ldflags="-w -s" -o /go/bin/wren main.go


###############################################################################
# Create the runtime environment

FROM debian:bullseye-slim as runtime

RUN  apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates wget \
    && update-ca-certificates

# Install grpc-health-probe binary into container
RUN GRPC_HEALTH_PROBE_VERSION=v0.4.11 && \
    wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \
    chmod +x /bin/grpc_health_probe

###############################################################################
# create the final container

FROM runtime

COPY --from=rust-sysdeps /builds/kaskada/target/debug/sparrow-main /bin/sparrow-main
COPY --from=wren-build /go/bin/wren /bin/wren
COPY run.sh run.sh

# CMD ["./run.sh"]
