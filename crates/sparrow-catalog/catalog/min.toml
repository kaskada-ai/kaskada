name = "min"
signature = "min(input: ordered, window: window = null) -> ordered"
short_doc = "Computes the minimum of values across the input."
long_doc = """
This is an aggregation that computes the minimum across multiple rows.
See [`zip_min`](#zip-min) to take the minimum of two values from
each row.

### Parameters
* input: The input to compute the minimum of.
* window: The window to aggregate within, as described in
[Aggregation Functions](#aggregation-functions). If `null`, aggregates are across all
rows for the current entity. If non-`null`, aggregates are within the specified window.
See [window functions](#window-functions) for how to specify the aggregation window.

### Results
For each input row, return the minimum of new, non-`null` rows in `input` up to and
including the input row for the given entity. Returns `null` until there has been
at least one such input.
"""
tags = [
    "aggregation",
    "math",
]

[[examples]]
name = "Minimum"
expression = "min(Input.value)"
input_csv = """
time,key,value
2021-01-01T00:00:00.000000000Z,Ben,50.7
2021-01-01T00:00:00.000000000Z,Ryan,
2021-01-02T00:00:00.000000000Z,Ryan,67.2
2021-01-03T00:00:00.000000000Z,Ben,1.2
2021-01-04T00:00:00.000000000Z,Ben,
2021-01-04T00:00:00.000000000Z,Ryan,2.3
"""
output_csv = """
time,key,value,result
2021-01-01T00:00:00.000000000,Ben,50.7,50.7
2021-01-01T00:00:00.000000000,Ryan,,
2021-01-02T00:00:00.000000000,Ryan,67.2,67.2
2021-01-03T00:00:00.000000000,Ben,1.2,1.2
2021-01-04T00:00:00.000000000,Ben,,1.2
2021-01-04T00:00:00.000000000,Ryan,2.3,2.3
"""
