name = "remove_fields"
signature = "remove_fields(record, fields: string+) -> record"
short_doc = "Remove fields from a record."
long_doc = """
Note: If more fields are being removed than retained, you can use
[`select_fields`](#select_fields).

### Parameters
* record: The record column containing the fields.
* fields: The name of one or more fields to remove from the record.

Note: Since this is a variable arity function, the `$input` will not
be implicitly provided. If you wish to use `remove_fields` with pipe
syntax you must be explicit, as in the example.

### Results
Returns a column containing the fields in `record` not listed in `fields`,
with the corresponding values from `record`. The result is `null` in rows
where `record` is `null`.
"""
tags = ["record"]

[[examples]]
name = "Record Field Filtering"
full_expression = """
Input | remove_fields($input, 'c')
"""
input_csv = """
time,key,a,b,c
2021-01-01T00:00:00.000000000Z,A,5,1.2,true
2021-01-02T00:00:00.000000000Z,A,6.3,0.4,false
2021-03-01T00:00:00.000000000Z,B,,3.7,true
2021-04-10T00:00:00.000000000Z,A,13,,true
"""
output_csv = """
time,key,a,b
2021-01-01T00:00:00.000000000,A,5.0,1.2
2021-01-02T00:00:00.000000000,A,6.3,0.4
2021-03-01T00:00:00.000000000,B,,3.7
2021-04-10T00:00:00.000000000,A,13.0,
"""
