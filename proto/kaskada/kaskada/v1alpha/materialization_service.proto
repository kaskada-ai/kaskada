syntax = "proto3";

package kaskada.kaskada.v1alpha;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "kaskada/kaskada/v1alpha/common.proto";
import "kaskada/kaskada/v1alpha/destinations.proto";
import "kaskada/kaskada/v1alpha/schema.proto";
import "validate/validate.proto";

message WithView {
  // The view's name.
  string name = 1 [(validate.rules).string.min_len = 1];

  // A Fenl expresion describing the view's values.
  string expression = 2 [(validate.rules).string.min_len = 1];
}

message WithViews {
  // A list of WithView objects.
  repeated WithView views = 1;
}

message Materialization {
  // The Materialization's ID.
  //
  // This value is a unique identifier for the materialization within a
  // Kaskada account. The ID is generated by Kaskada, and is provided as a
  // read-only field.
  string materialization_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The Materialization's Name.
  //
  // This value must be unique within an Kaskada account as it is used to
  // identify the materialization in Fenl queries.
  string materialization_name = 2 [(validate.rules).string.min_len = 1];

  // The creation timestamp of the materialization in kaskada
  google.protobuf.Timestamp create_time = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // A Fenl expression to compute.
  string query = 4;

  // An optional list of views to use when computing the query results.
  //
  // Views may be referenced by name in the query.
  // Views described here take precedence over views defined using the
  // View API.
  repeated WithView with_views = 5;

  // Configures where the results should be outputted to.
  Destination destination = 6;

  // The schema of the materialization.
  Schema schema = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // How to slice the input data when processing the materialization
  SliceRequest slice = 8;

  message Destination {
    oneof destination {
      RedisDestination redis = 1;
      ObjectStoreDestination object_store = 2;
      PulsarDestination pulsar = 3;
    }
  }

  // The result of the analyze step during materialization creation
  Analysis analysis = 9 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The latest data token id this materialization was computed at.
  //
  // This value is updated as new data is loaded into tables.
  string data_token_id = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message ListMaterializationsRequest {
  // Materialization search string.
  //
  // If provided, only materializations with a name containing the given
  // string will be returned.
  string search = 1;

  // The maximum number of items to return.
  int32 page_size = 2 [(validate.rules).int32 = {
    gte: 0,
    lte: 1000
  }];

  // The next_page_token value returned from a previous List request, if
  // any. Note: if this is set, the `search` and `page_size` parameters
  // are ignored, and the values set in the original request are used
  // instead.
  string page_token = 3;
}

message ListMaterializationsResponse {
  // A list of Materializations.
  repeated Materialization materializations = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;

  // Information, help, or warnings related to the request
  RequestDetails request_details = 3;
}

message GetMaterializationRequest {
  // The name of the Materialization to get.
  string materialization_name = 1 [(validate.rules).string.min_len = 1];
}

message GetMaterializationResponse {
  // The requested Materialization.
  Materialization materialization = 1;

  // Information, help, or warnings related to the request
  RequestDetails request_details = 2;
}

message CreateMaterializationRequest {
  // The Materialization resource to crate.
  Materialization materialization = 1;

  // If this is `true`, then the materialization is validated and if there are no
  // errors, the resultant analysis is returned. No actual materializaiton is created.
  bool dry_run = 2;
}

message CreateMaterializationResponse {
  // The Materialization resource that was created.
  // If this is empty, check `analysis` for reasons.
  Materialization materialization = 1;

  // Information, help, or warnings related to the request
  RequestDetails request_details = 2;

  // The result of the analyze step during materialization creation
  Analysis analysis = 3;
}

message DeleteMaterializationRequest {
  // The name of the Materialization to delete.
  string materialization_name = 1 [(validate.rules).string.min_len = 1];
}

message DeleteMaterializationResponse {
  // Information, help, or warnings related to the request
  RequestDetails request_details = 1;
}

// A service for managing Materializations.
service MaterializationService {
  // Lists materializations.
  //
  // The response includes all Materializations defined for the Kaskada
  // account. If a search string is provided, only Materializations
  // matching the search string are returned.
  rpc ListMaterializations(ListMaterializationsRequest) returns (ListMaterializationsResponse) {
    // List method maps to HTTP GET.
    option (google.api.http) = {get: "/v1alpha/materializations"};
  }

  // Gets a materialization.
  rpc GetMaterialization(GetMaterializationRequest) returns (GetMaterializationResponse) {
    // Get maps to HTTP GET.
    option (google.api.http) = {get:
        "/v1alpha/materializations/"
        "{materialization_name=*}"
};
  }

  // Creates a materialization.
  rpc CreateMaterialization(CreateMaterializationRequest) returns (CreateMaterializationResponse) {
    // Create maps to HTTP POST. URL path as the collection name.
    // HTTP request body contains the resource.
    option (google.api.http) = {
      post: "/v1alpha/materializations"
      body: "materialization"
    };
  }

  // Deletes a materialization and any events loaded into it.
  rpc DeleteMaterialization(DeleteMaterializationRequest) returns (DeleteMaterializationResponse) {
    option (google.api.http) = {delete:
        "/v1alpha/materializations/"
        "{materialization_name=*}"
};
  }
}
