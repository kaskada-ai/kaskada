syntax = "proto3";

package kaskada.kaskada.v1alpha;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "kaskada/kaskada/v1alpha/common.proto";
import "kaskada/kaskada/v1alpha/destinations.proto";
import "kaskada/kaskada/v1alpha/fenl_diagnostics.proto";
import "kaskada/kaskada/v1alpha/schema.proto";
import "kaskada/kaskada/v1alpha/view_service.proto";
import "validate/validate.proto";

message Query {
  // The query's ID.
  //
  // This value is a unique identifier for the query within a Kaskada
  // account. The ID is generated by Kaskada, and is provided as a
  // read-only field.
  string query_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // A Fenl expression to compute.
  string expression = 2 [(validate.rules).string.min_len = 1];

  // Configures how the query results should be returned.
  OutputTo output_to = 104;

  // Modified output from one_of to `OutputTo` message.
  // Updated on Feb.24.2023
  reserved 101, 102, 103;

  // Optional. A token to run queries against. Enables repeatable queries.
  //
  // For new queries:
  // Null - Uses the latest data token
  // StringValue String - UUID of data token to use for query
  //
  // For existing queries:
  // Null - Uses the data token associated with the query resource
  // StringValue null - Uses the latest data token
  // StringValue String - UUID of data token to use for query
  google.protobuf.StringValue data_token_id = 3;

  // The views utilized in the query
  //
  // TODO: More thorough docs.
  repeated View views = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Determines how results are returned.
  ResultBehavior result_behavior = 5;

  // Configure limits on the output set.
  Limits limits = 6;

  // How to slice the input data for the query
  SliceRequest slice = 7;

  // Time bound (inclusive) after which results will be output.
  //
  // All results will include rows for changes (events and ticks) after this time (inclusive).
  // Final results will include a final result for any entity that would be included in the changed results."
  google.protobuf.Timestamp changed_since_time = 8;

  message Limits {
    // Produces a preview of the data with at least this many rows.
    int64 preview_rows = 1;
  }

  message RedisBulkResponse {
    // The tensor shape to output values.
    //
    // Exactly one dimension's value must be zero - this dimension's
    // cardinality is determined by the number of output values. The
    // number of output values must be a multiple of the product of
    // the nonzero dimensions.
    //
    // Example:
    //    [0] - Column vector:           [1,2,3,4,5,6]
    //    [1, 0] - Single row vector:    [[1,2,3,4,5,6]]
    //    [2, 0] - tuple vectors:        [[1,2], [3,4], [5,6]]
    //    [0, 2] - two row vectors:      [[1,2,3], [4,5,6]]
    repeated int32 shape = 1;
  }

  enum ResultBehavior {
    // Unspecified - Invalid Value
    RESULT_BEHAVIOR_UNSPECIFIED = 0;
    // All results are returned
    RESULT_BEHAVIOR_ALL_RESULTS = 1;
    // Only the most recent event for each entity will be returned
    RESULT_BEHAVIOR_FINAL_RESULTS = 2;
    // Only the most recent event (inclusive limit) for each entity will be returned
    RESULT_BEHAVIOR_FINAL_RESULTS_AT_TIME = 3;
  }

  // Time bound (inclusive) which final results will include.
  google.protobuf.Timestamp final_result_time = 9;

  // The time the query resource was created
  google.protobuf.Timestamp create_time = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message QueryOptions {
  // If this is `true`, then the query is validated and if there are no
  // errors, the resultant schema is returned. No actual computation of
  // results is performed.
  bool dry_run = 1;
  // If this is `true`, then experimental features are allowed.  Data
  // returned when using this flag is not guaranteed to be correct.
  bool experimental_features = 2;
  // If this is `true`, then metrics information will be returned with
  // every response.  This is usefull to see how the query request is
  // progressing.  If `false`, metrics are only returned in the final
  // response.
  bool stream_metrics = 3;
  // If this is `true`, then file-based results will be pre-signed
  // before being returned.
  //
  // The files can be read with HTTP, and will be available for a
  // fixed amount of time (TTL).
  //
  // For example: When running the engine with S3 as the backing
  // store, and working locally, set this to true to return
  // results as HTTP URLs instead of S3 URIs.  The returned URLs
  // can be used to download the results file without additional
  // authenticaiton to S3.
  bool presign_results = 4;
}

message CreateQueryRequest {
  // The query resource
  Query query = 1;
  // Options for the query
  QueryOptions query_options = 2;
}

message CreateQueryResponse {
  State state = 1;

  // Config information returned when the state is STATE_ANALYSIS
  Config config = 2;

  // Analysis information returned when the state is STATE_ANALYSIS
  Analysis analysis = 3;

  // Diagnostic information about the query, can be returned in any response
  FenlDiagnostics fenl_diagnostics = 4;

  // Metrics about the query passed in every response if `stream_metrics`
  // was set `true`.  Otherwise returned in the final response only.
  Metrics metrics = 5;

  // Information, help, or warnings related to the request
  RequestDetails request_details = 6;

  // The query resource ID
  string query_id = 7;

  // Results of the query execution.  if this is empty (and `dry_run`
  //  was not set `true`), check `fenl_diagnostics` for reasons
  //
  // Results may be returned at any point in the response stream
  // each result represents a different subset of the results. All
  // results in any messge in the response stream should be
  // collected and used to represent the complete output.
  OutputTo output_to = 104;

  // Modified output from one_of to `OutputTo` message.
  // Removed on Feb.24.2023
  reserved 101, 102, 103;

  enum State {
    STATE_UNSPECIFIED = 0;
    STATE_ANALYSIS = 1;
    STATE_PREPARING = 2;
    STATE_COMPUTING = 3;
    STATE_SUCCESS = 4;
    STATE_FAILURE = 5;
  }

  message Analysis {
    // The executable state of the query. If false,
    // check `fenl_diagnostics` for reasons
    bool can_execute = 1;

    // The schema of the query.  If this is empty, check
    // `fenl_diagnostics` for reasons.
    Schema schema = 2;
  }

  message Config {
    // The data token the query was run against.  To enable repeatable
    // queries, pass this id on future requests
    string data_token_id = 1;

    // How the input data was sliced for this query
    SliceRequest slice_request = 2;
  }

  message Metrics {
    // Time spent preparing input
    google.protobuf.Duration time_preparing = 1;

    // Time spent computing results
    google.protobuf.Duration time_computing = 2;

    // The number of output files produced.
    int64 output_files = 3;

    // Total input rows to be processed by this query.
    int64 total_input_rows = 4;

    // Number of input rows processed by this query.
    int64 processed_input_rows = 5;

    // The number of output rows produced so far.
    int64 produced_output_rows = 6;
  }
}

message GetQueryRequest {
  // The ID of the Query to get.
  string query_id = 1 [(validate.rules).string.min_len = 1];
}

message GetQueryResponse {
  // The requested Query.
  Query query = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message ListQueriesRequest {
  // Query search string.
  //
  // If provided, only queries cointaining the given string will
  // be returned.
  string search = 1;
  // The maximum number of items to return.
  int32 page_size = 2 [(validate.rules).int32 = {
    gte: 0,
    lte: 1000
  }];

  // The next_page_token value returned from a previous List request, if
  // any. Note: if this is set, the `search` and `page_size` parameters
  // are ignored, and the values set in the original request are used
  // instead.
  string page_token = 3;
}

message ListQueriesResponse {
  // A list of queries.
  repeated Query queries = 1;
  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
  // Information, help, or warnings related to the request
  RequestDetails request_details = 3;
}

service QueryService {
  // Creates a Query.
  rpc CreateQuery(CreateQueryRequest) returns (stream CreateQueryResponse) {
    // Create maps to HTTP POST. URL path as the collection name.
    // HTTP request body contains the resource.
    option (google.api.http) = {
      post: "/v1alpha/queries"
      body: "query"
    };
  }

  // Gets a Query.
  rpc GetQuery(GetQueryRequest) returns (GetQueryResponse) {
    option (google.api.http) = {get: "/v1alpha/queries/{query_id=*}"};
  }
  // Lists queries.
  //
  // The response includes all Queries defined for the Kaskada account.
  // If a search string is provided, only Queries matching the search string
  // are returned.
  rpc ListQueries(ListQueriesRequest) returns (ListQueriesResponse) {
    // List method maps to HTTP GET.
    option (google.api.http) = {get: "/v1alpha/queries"};
  }
}
