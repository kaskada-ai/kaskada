# Default values for kaskada-canaray.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

  # -- The name of the Namespace to deploy into.
  # If not set, `.Release.Namespace` is used
namespace: null

# -- Labels to apply to all resources
commonLabels: {}

image:
  # -- Docker image repository
  repository: ghcr.io/kaskada-ai/kaskada/engine
  # -- Overrides the image tag whose 
  tag: latest
  # -- Docker image pull policy
  pullPolicy: IfNotPresent

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Configures logging output for the pod.
logging:
  # -- Should be `info` or `debug`
  # -- Note that sensitive information may exist in logs if the `debug` level is used 
  level: info
  # -- Either `json` or `console`
  format: json

# -- Annotations to add to the pod
podAnnotations: {}

# -- Labels to add to the pod
podLabels: {}

## Expose the kaskada-canary service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  # -- Specifies whether a Service should be created
  create: true
  # -- The type of service to create
  type: ClusterIP
  # -- The port for exposing the gRPC service
  grpcPort: 50051
  # -- The port for exposing the REST service
  restPort: 3365
  # -- Annotations to add to the service
  annotations: {}
  # -- Labels to add to the service
  labels: {}
  # -- Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: "http" or "tcp"
  appProtocol: ""

# -- Node selector for the pod
nodeSelector: {}
# -- Tolerations for the pod
tolerations: []

resources:
  # -- Resource requests and limits for the engine container
  engine: {}
  # -- Resource requests and limits for the manager container
  manager: {}

storage:
  # -- Configures the primary storage for the kaskada service
  objectStore:
    # -- The name of the bucket or container to use for storing data
    bucket: null
    # -- The bucket path prefix to use for storing data
    path: /data/
    # -- The type of object storage to use for the service. Either `local` or `s3`.
    # -- If `s3`, configure authentication to s3 in the `auth` section below
    type: local
    local:
      # -- The size of the data storage volume when using local storage.
      storage: 100Gi
      # -- The type of storage used to provision the local data volume.
      storageClassName:      
  # -- Configures the database storage for the kaskada service
  dbData:
    # -- The size of the database volume
    storage: 1Gi
    # -- The type of storage used to provision the persisted database volume
    storageClassName:
  # -- Configures temporary storage for the kaskada service
  tmpData:
    # -- The size of the temporary volume
    storage: 10Gi
    # -- The type of storage used to provision the temporary volume
    storageClassName:

auth:
  # -- (Optional) User-based authentication for AWS when using S3 as the primary storage for kaskada
  # -- Instead, consider using IRSA authenication via the `auth.serviceAccount` values below.
  aws:
      # -- An AWS secret access key that has permisison to write to the bucket & prefix
      secretAccessKey: null
      # -- An AWS access key id that has permisison to write to the bucket & path
      accessKeyId: null
      # -- The region where the S3 bucket exists
      region: null
  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: false
    # -- The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name: null
    # -- Image pull secrets for the service account
    imagePullSecrets: []
    # -- Annotations for the service account
    annotations: {}
