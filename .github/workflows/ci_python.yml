# This file is autogenerated by maturin v1.2.0
# To update, run
#
#    maturin generate-ci github --pytest --zig -o ../.github/workflows/ci_python.yml
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --zig
          sccache: 'true'
          manylinux: auto
          working-directory: ${{ github.workspace }}/python
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ${{ github.workspace }}/python/dist
      - name: pytest
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        shell: bash
        working-directory: ${{ github.workspace }}/python
        run: |
          set -e
          pip install kaskada --find-links dist --force-reinstall
          pip install pytest
          pytest
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'x86') && matrix.target != 'ppc64' }}
        uses: uraimo/run-on-arch-action@v2.5.0
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip poetry
            cd ${{ github.workspace }}/python
            # We shouldn't need regular dependencies, since they come from
            # the `pip install` of kaskada later.
            poetry install --only test
          run: |
            set -e
            pip3 install kaskada --find-links dist --force-reinstall
            pytest

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: ${{ github.workspace }}/python
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ${{ github.workspace }}/python/dist
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'aarch64') }}
        shell: bash
        run: |
          set -e
          pip install kaskada --find-links dist --force-reinstall
          pip install poetry
          cd ${{ github.workspace }}/python
          # We shouldn't need regular dependencies, since they come from
          # the `pip install` of kaskada above.
          poetry install --only=test
          pytest

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: ${{ github.workspace }}/python
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ${{ github.workspace }}/python/dist
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'aarch64') }}
        shell: bash
        run: |
          set -e
          pip install kaskada --find-links dist --force-reinstall
          pip install poetry
          # We shouldn't need regular dependencies, since they come from
          # the `pip install` of kaskada above.
          poetry install --only-tset
          pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: ${{ github.workspace }}/python
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ${{ github.workspace }}/python/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
