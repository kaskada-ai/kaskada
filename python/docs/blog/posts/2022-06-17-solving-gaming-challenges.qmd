---
image: /_static/images/blog/solving-gaming-challenges_banner.png
title: How AI and ML are helping the gaming industry solve its biggest challenges
author: ""
date: "2022-06-17"
draft: true
---


AI and ML are enabling incredible advancements across many sectors, and the gaming industry is no exception. Games are rich, virtual environments in which it is possible to gather huge amounts of event-based data from player interactions and behavior. For many companies, this information is forgotten or not utilized effectively, leading games to struggle to attract and retain players. However, for those gaming companies which can effectively apply event-based ML to their data, they can now, more than ever before, extract structure and meaning from player behavior and reap the benefits. These include drastically improved player engagement and retention, heightened player satisfaction, and ultimately much greater player monetization.

Incorporating AI and ML into gameplay and player retention efforts may be the key to securing an outsized slice of the sizable gaming industry revenue pie. Gaming is more popular than ever before, and in recent years its revenues have eclipsed those of the more entrenched entertainment industries. Total gaming revenues (i.e. mobile, PC, and console gaming, combined) have topped $180 billion as of 2021, beating out those from television, digital music, and even box office films. Much of this growth has been driven by better player acquisition, retention, and personalization efforts driven by AI and ML.

![](/_static/images/blog/solving-gaming-challenges_revenue.png)

## Player Attraction and Retention

Attracting new players to a game has always been a struggle for many mobile gaming companies. In today’s noisy world, where new games are released daily and app stores constantly advertise the latest and greatest thing, it can be difficult to appeal to prospective players over a longer time horizon. Luckily, ML can help companies identify the players who are most likely to download their game and then target those same individuals with advertisements, content, and outreach. In order to identify prospective players, it is vital to collect demographic information from current players such as their device type, OS, network latency, email open and read events, ad impressions, browsing history, and location. These and many other features can be fed into a machine learning model which can be trained to predict which player demographics are most likely to be receptive to a given game.

Similarly, player retention rates in the mobile gaming industry are abysmally low. In fact, on average, fewer than 5% of players continue playing a given game after the first day. The reasons why a player might stop playing a game are diverse and can range from frustration (too much difficulty) to boredom (not enough difficulty) to distraction with other games or content. At the core of keeping a player in a game is maximizing engagement, and this is achieved by properly calibrating the game’s difficulty, customizing messaging content towards players, and reaching out to them at the right times and via the right medium (e.g. sending a notification vs. an email). It can be difficult to tune all these parameters correctly as they vary from game to game and player to player. Therefore, collecting event-based data is critical because it allows gaming companies to understand how players’ preferences are updated over time and adjust game content accordingly. Because only certain ML models are able to properly incorporate event-based data, choosing the right model and data ingestion platform is critical to gaming businesses that want to get the most from their data.

Event-based data also plays a key role in designing a marketing pipeline to acquire players. Based on historical data, gaming companies can iteratively adjust their marketing email and mobile notification flows, learning when are the best times and ways in which to reach out to players in order to keep them engaged. They can also use machine learning to assess how best to reestablish contact with those players who abandon a game and discover new and creative ways to incentivize them to return, perhaps by offering them inducements such as free in-game perks, powerups, and content.

## Forecasting Player Behavior and NPCs

Because game players are human, their behavior is inherently complex. However, that’s not to say that it’s entirely unpredictable. Using paradigms such as reinforcement learning and other advanced types of ML, it is now possible for game developers to anticipate how players might react to a given in-game situation. There are many reasons why being able to make such a prediction might be useful. The first is for designing smarter and more realistic non-player characters (NPCs). Whether they are allies or enemies, having NPCs anticipate player behavior and interact more convincingly has an incredible impact on increasing player engagement which thereby leads to improved retention.

Forecasting player behavior can also be useful for generating dynamic game content. Open world and role-playing games are particularly well suited for utilizing such insights. Imagine an open world wild west game in which a player recruits a posse of cowboys in order to rob a bank, and the game realizes that this complex behavior has occurred and sends the sheriff and his deputies to confront the player in advance. Or visualize instead a situation in which entire worlds or maps are spawned in response to player actions.

Recent advances in NLP and dialog systems are yet another way in which ML can better anticipate player behavior in order to generate realistic interactions. No longer are game creators limited to simplistic, predetermined conversational paths. Now, entirely novel conversations can be generated between players and NPCs, and the game storyline and structure can be modified in response to off-the-cuff interactions.

## Player Ranking and Fraudulent Activity

For online multiplayer games in particular, ranking players is a key contribution of ML. It’s important that the ranking and pairing of players is accurate, because improper ranking can lead to frustration, boredom, and low player engagement. A given player does not want to play with others who are too far above or below their current skill level as this diminishes the fun of the experience. Closely related to this problem is the detection of fraudulent in-game activity. Detecting and removing players who are cheating the system by using bots or disallowed hacks is critical to ensuring that the gaming experience is fair and enjoyable for everyone. Event-based models can monitor player behavior over time and quickly detect aberrations that might be suggestive of cheating.

Much of the difficulty of detecting cheating and fraud within gaming is that the model must operate entirely in real-time and across networks of many players, all in response to event-based data. Identifying and banning cheaters after many instances of cheating have occurred is not all that useful, as by that point the gaming experiences of other players have already been negatively impacted, causing frustration and perhaps leading them to abandon the game. A better solution is to block and abort cheaters from the game in real-time. Development of tools to work with real-time, event-based data has enabled this ability, and  [research](https://openworks.wooster.edu/cgi/viewcontent.cgi?article=11803&context=independentstudy)  has validated the effectiveness of this approach.

## Conclusion

AI and ML have truly revolutionized what’s possible within the gaming space, allowing game developers to more effectively target potential customers, generate new and exciting in-game content in response to forecasted player actions, detect and prevent cheating, improve player ranking and pairing, and identify what causes individual players to abandon the gaming experience. A common thread underlying all of these newfound capabilities is the incorporation of event-based data into the modeling process, something which necessitates new tools. Feature engines are at the heart of event-based ML tooling and provide the requisite infrastructure for training models on top of what is inherently an ever-evolving training set. Static feature stores are good for models which train on fixed user data such as demographics, but quickly become limited in the context of dynamic game environments. However, given the right data toolbox, a development team can easily build a model which travels back in time across the entire history of user actions and updates in response to new behaviors. It is this powerful machine learning model paradigm which will truly allow gaming companies to learn from all of the information they have at their disposal and secure their deserved piece of the gaming revenue pie.