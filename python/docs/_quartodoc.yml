quartodoc:
  title: API
  dir: reference
  out_index: index.qmd
  parser: google #one of “google”, “sphinx”, and “numpy”.
  # the name used to import the package
  package: kaskada
  renderer:
    style: _renderer.py

  # write sidebar data to this file
  sidebar: reference/_metadata.yml

  sections:
    - title: Timestream
      contents:
        - kind: page
          path: timestream_class
          flatten: true
          package: null
          contents:
            - name: kaskada.Timestream
              members: [data_type]
            - kaskada.Arg
            - kaskada.LiteralValue
    - subtitle: Aggregation
      contents:
        - kind: page
          path: aggregation
          summary:
            name: Aggregation
            desc: |
              The User Guide has details on [aggregations in general](../../guide/aggregation.md).

              ::: {.callout-important}
              It is important to remember that aggregations are partitioned by entity and windowed, with the default behavior being cumulative up to the current time.
              :::
          contents: []
        - Timestream.collect
        - Timestream.count
        - Timestream.count_if
        - Timestream.first
        - Timestream.last
        - Timestream.max
        - Timestream.mean
        - Timestream.min
        - Timestream.stddev
        - Timestream.sum
        - Timestream.variance
    - subtitle: Arithmetic
      contents:
        - kind: page
          path: arithmetic
          summary:
            name: Arithmetic
            desc: |
              Timestreams support a variety of arithmetic operations.

              ::: {.callout-important}
              In addition to the chainable methods, standard operators are implemented where appropriate.
              For instance, `a.add(b)` may be written as `a + b`.
              See the notes on the specific functions for more information.
              :::
          contents: []
        - Timestream.add
        - Timestream.ceil
        - Timestream.clamp
        - Timestream.div
        - Timestream.exp
        - Timestream.floor
        - Timestream.greatest
        - Timestream.least
        - Timestream.mul
        - Timestream.neg
        - Timestream.powf
        - Timestream.round
        - Timestream.sqrt
        - Timestream.sub
    - subtitle: Collection
      contents:
        - kind: page
          path: collection
          summary:
            name: Collection
            desc: |
              Timestreams allow each point to contain a collection -- a `list` or `map` -- of elements.
          contents: []
        - Timestream.__getitem__
        - Timestream.flatten
        - Timestream.index
        - Timestream.length
        - Timestream.union
    - subtitle: Comparision
      contents:
        - kind: page
          path: comparison
          summary:
            name: Comparision
            desc: |
              Comparison operations produce boolean Timestreams.

              ::: {.callout-important}
              In addition to the chainable methods, standard operators are implemented where appropriate.
              For instance, `a.ge(b)` may be written as `a >= b`.
              See the notes on the specific functions for more information.

              To respect the semantics of `__eq__` and `__ne__`, `a == b` and `a != b` are *not* overloaded.
              :::
          contents: []
        - Timestream.eq
        - Timestream.ge
        - Timestream.gt
        - Timestream.le
        - Timestream.lt
        - Timestream.ne
        - Timestream.is_null
        - Timestream.is_not_null
    - subtitle: Execution
      contents:
        - Timestream.preview
        - Timestream.to_pandas
        - Timestream.run_iter
        - Timestream.write
    - subtitle: Grouping
      contents:
        - Timestream.lookup
        - Timestream.with_key
    - subtitle: Logical
      contents:
        - Timestream.and_
        - Timestream.or_
        - Timestream.not_
    - subtitle: Misc
      contents:
        - Timestream.cast
        - Timestream.coalesce
        - Timestream.else_
        - Timestream.filter
        - Timestream.hash
        - Timestream.if_
        - Timestream.lag
        - Timestream.null_if
        - Timestream.pipe
    - subtitle: Records
      contents:
        - kind: page
          path: records
          summary:
            name: Records
            desc: |
              Record operations create, extract or manipulate Timestreams of records.
          contents: []
        - Timestream.col
        - Timestream.select
        - Timestream.remove
        - Timestream.extend
        - Timestream.record
        - record
    - subtitle: String
      contents:
        - Timestream.lower
        - Timestream.upper
    - subtitle: Time
      contents:
        - Timestream.shift_by
        - Timestream.shift_to
        - Timestream.shift_until
        - Timestream.time
        - Timestream.seconds_since
        - Timestream.seconds_since_previous
    - title: Windows
      options:
        children: separate
      package: kaskada.windows
      contents:
        - Window
        - Since
        - Sliding
        - Trailing
    - title: Sources
      options:
        children: embedded
      package: kaskada.sources
      contents:
        - Source
        - CsvString
        - JsonlString
        - Pandas
        - Parquet
        - PyDict
    - title: Destinations
      options:
        children: separate
      contents:
        - destinations
    - title: Results
      options:
        children: separate
      package: kaskada.results
      contents:
        - History
        - Snapshot
    - title: Execution
      options:
        children: separate
      contents:
        - Execution
        - ResultIterator